{"version":3,"sources":["App.js","index.js"],"names":["App","useState","quotes","setQuotes","index","setIndex","useEffect","fetch","then","res","json","q","length","i","random","Math","floor","newQuote","splice","push","className","quote","author","disabled","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAuCeA,MApCf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAoBA,OAjBAC,qBAAU,WACRC,MAAM,yIACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACN,GAGC,IAFA,IAAIS,EAAI,GACFC,EAAQV,EAAOU,OACZC,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,IAAIC,EAASC,KAAKC,MAAMD,KAAKD,SAAWZ,EAAOU,QAC3CK,EAAWf,EAAOgB,OAAOJ,EAAQ,GACrCH,EAAEQ,KAAKF,EAAS,IAElBd,EAAUQ,QAGf,IAGD,sBAAKS,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,6BAAKlB,EAAOU,OAASV,EAAOE,GAAOiB,MAAQ,eAC3C,6BAAKnB,EAAOU,OAASV,EAAOE,GAAOkB,OAAS,kBAI9C,wBAAQF,UAAU,MAAMG,SAAUnB,GAAS,EAAGoB,QAAS,kBAAMnB,EAASD,EAAQ,IAA9E,6BACA,wBAAQgB,UAAU,MAAMG,SAAUnB,GAASF,EAAOU,OAAQY,QAAS,kBAAMnB,EAASD,EAAQ,IAA1F,gCC7BNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e004cbe2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [quotes, setQuotes] = useState([]);\n  const [index, setIndex] = useState(0);\n\n  // Przechwycenie z API tablicy cytatów, przypisanie ich do formatu .json\n  useEffect(() => {\n    fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\n      .then(res => res.json())\n      .then(\n        (quotes) => {\n          let q = []\n          const length= quotes.length\n          for (let i = 0; i < length; i++) {\n            let random = Math.floor(Math.random() * quotes.length)\n            let newQuote = quotes.splice(random, 1)\n            q.push(newQuote[0])\n          }\n          setQuotes(q);\n        }\n      )\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"quote\">\n        <h1>{quotes.length ? quotes[index].quote : 'Loading...'}</h1>\n        <h3>{quotes.length ? quotes[index].author : 'Loading...'}</h3>\n      </div>\n      {/* buttons disabled przy indeksach wykraczajacych poza dostepna tablice \n      przesuwanie indeksu +/- 1 zeby wyświetlić kolejny i poprzedni cytat */}\n      <button className=\"btn\" disabled={index <= 0} onClick={() => setIndex(index - 1)}>Poprzedni cytat</button>\n      <button className=\"btn\" disabled={index >= quotes.length} onClick={() => setIndex(index + 1)}>Wygeneruj nowy</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}